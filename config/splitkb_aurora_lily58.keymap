/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

&mwh { acceleration-exponent=<0>; };

/ {
    behaviors {
        rotate_kp: behavior_sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ENC_KP";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        rotate_mwh: behavior_sensor_rotate_mwh {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_MWH";
            #sensor-binding-cells = <0>;
            bindings = <&mwh SCROLL_UP>, <&mwh SCROLL_DOWN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
   &kp ESC  &kp HOME  &kp END  &kp INSERT  &kp PG_UP  &kp PG_DN                              &kp LEFT  &kp DOWN     &kp UP  &kp RIGHT   &kp DEL     &kp BACKSPACE
   &kp TAB     &kp Q    &kp W       &kp E      &kp R      &kp T                              &kp Y     &kp U      &kp I      &kp O     &kp P          &kp RALT
&kp LSHIFT     &kp A    &kp S       &kp D      &kp F      &kp G                              &kp H     &kp J      &kp K      &kp L  &kp SEMI  &kp SINGLE_QUOTE
 &kp LCTRL     &kp Z    &kp X       &kp C      &kp V      &kp B  &kp C_MUTE  &kp PRINTSCREEN &kp N     &kp M  &kp COMMA    &kp DOT  &kp FSLH           &kp RET
                                 &kp LGUI   &kp LALT      &mo 1  &kp SPACE            &mo 3  &mo 2     &mo 4      &mo 5
            >;

            sensor-bindings = <&rotate_mwh>;
        };

        Lower {
            bindings = <
&kp GRAVE        &trans        &trans        &trans        &trans  &trans                      &trans     &trans     &trans            &trans             &trans         &trans
   &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &trans                      &trans     &trans     &trans            &trans             &trans         &trans
   &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6        &trans  &trans                      &trans  &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
   &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9        &trans  &trans  &bt BT_CLR  &trans  &trans     &trans     &trans            &trans             &trans         &trans
                                             &trans        &trans  &trans      &trans  &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&rotate_kp C_VOL_UP C_VOL_DN>;
        };

        Raise {
            bindings = <
&kp TILDE    &trans  &trans    &trans      &trans       &trans                     &trans          &trans        &trans                &trans                 &trans   &kp DEL
   &trans  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET   &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans
   &trans    &trans  &trans    &trans      &trans       &trans                     &trans  &kp UNDERSCORE      &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp PIPE
   &trans    &trans  &trans    &trans      &trans       &trans  &trans  &trans     &trans          &trans        &trans                &trans                 &trans    &trans
                               &trans      &trans       &trans  &trans  &trans     &trans          &trans        &trans
            >;
        };

        Nav {
            bindings = <
&trans            &trans            &trans            &trans  &trans  &trans                  &trans  &trans            &trans            &trans            &trans  &trans
&trans  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &trans  &trans                  &trans  &trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans
&trans  &kp LA(NUMBER_4)  &kp LA(NUMBER_5)  &kp LA(NUMBER_6)  &trans  &trans                  &trans  &trans  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)  &kp LG(NUMBER_6)  &trans
&trans  &kp LA(NUMBER_7)  &kp LA(NUMBER_8)  &kp LA(NUMBER_9)  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(NUMBER_7)  &kp LG(NUMBER_8)  &kp LG(NUMBER_9)  &trans
                                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans
            >;
        };

        Fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans   &trans   &trans   &trans  &trans
&trans  &kp F1  &kp F2  &kp F3  &trans  &trans                  &trans  &trans   &kp F7   &kp F8   &kp F9  &trans
&trans  &kp F4  &kp F5  &kp F6  &trans  &trans                  &trans  &trans  &kp F10  &kp F11  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };

        Hardware {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &out OUT_BLE  &out OUT_USB
    &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans        &trans        &trans
    &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans        &trans        &trans
    &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans
                                              &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
